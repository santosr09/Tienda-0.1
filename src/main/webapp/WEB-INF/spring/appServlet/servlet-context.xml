<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing 
        infrastructure -->
 
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
 
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/, /resources/img/, /resources/css/" />
 
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

   <!-- Create Data Source bean -->
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="org.postgresql.Driver" /> 
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/tienda" />
        <beans:property name="username" value="postgres" />
        <beans:property name="password" value="loma1234" />

    </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.juanjo.entity.Categoria</beans:value>
                <beans:value>com.juanjo.entity.Producto</beans:value>
                <beans:value>com.juanjo.entity.ProductoAlmacenado</beans:value>
                <beans:value>com.juanjo.entity.Marca</beans:value>
                <beans:value>com.juanjo.entity.NotaVenta</beans:value>
                <beans:value>com.juanjo.entity.DetalleVenta</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
     <!-- DAO'S -->
    <beans:bean id="categoriaDAO" class="com.juanjo.dao.CategoriaDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="productoDAO" class="com.juanjo.dao.ProductoDAOImpl">
    	<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="productoAlmacenadoDAO" class="com.juanjo.dao.ProductoAlmacenadoDAOImpl">
    	<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="notaVentaDAO" class="com.juanjo.dao.NotaVentaDAOImpl">
    	<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="marcaDAO" class="com.juanjo.dao.MarcaDAOImpl">
    	<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    
    <!-- Services -->
    <beans:bean id="categoriaService" class="com.juanjo.service.CategoriaServiceImpl">
        <beans:property name="dao" ref="categoriaDAO"></beans:property>
    </beans:bean>
    <beans:bean id="productoService" class="com.juanjo.service.ProductoServiceImpl">
        <beans:property name="dao" ref="productoDAO"></beans:property>
        <beans:property name="daoAlmacen" ref="productoAlmacenadoDAO"></beans:property>
    </beans:bean>
    <beans:bean id="notaVentaService" class="com.juanjo.service.NotaVentaServiceImpl">
    	<beans:property name="notaVentaDAO" ref="notaVentaDAO" />
    	<beans:property name="daoAlmacen" ref="productoAlmacenadoDAO" />
    </beans:bean>
    <beans:bean id="marcaService" class="com.juanjo.service.MarcaServiceImpl">
    	<beans:property name="dao" ref="marcaDAO" />
    </beans:bean>
    
    <context:component-scan base-package="com.juanjo" />
     
    <tx:annotation-driven transaction-manager="transactionManager"/>
     
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
 
</beans:beans>